name: Deployement
on: 
  push:
    branches:
      - master
      - production

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-node-modules-
            ${{ runner.os }}-

      - name: Install NPM dependencies
        run: npm ci
      
      - name: Lint
        uses: mooyoul/tslint-actions@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pattern: '*.ts'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-node-modules-
            ${{ runner.os }}-

      - name: Install NPM dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v12.8.0
        with:
          args: deploy --only hosting --project ${{ secrets.CODEML_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      
